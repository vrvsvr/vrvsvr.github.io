import{T as j,B as G,d as z}from"./2.B971hUaw.js";const I=new j().load("./gfs/assets/textures/ComfyUI_00036_.png");let l,t;const O=new G,v=[];let x=null,N;const M=[0,3,5,7,10];let u,d,g,p;function U(){if(x!==null)return;x=new(window.AudioContext||window.webkitAudioContext);function a(){const b=x.createOscillator();return b.type="sine",b.start(),b}v.push(a()),v.push(a()),window.oscillators=v}function F(a,b){l=new a.Group,l.position.z=-2.53,l.position.x=5.5,l.position.y=1.3,l.rotation.x=a.MathUtils.degToRad(90),l.name="haptics",b.add(l);const e=4;for(let c=0;c<e;c++){const i=(c+1)/e,s=.1,m=.05,y=new a.BoxGeometry(s,m,s);y.translate(0,m/2,0);const n=new a.MeshStandardMaterial({color:new a.Color(i,.1,.1),roughness:.7,metalness:0}),o=new a.Mesh(y,n);o.position.x=(c-5)*(s+.05),o.castShadow=!0,o.receiveShadow=!0,o.userData={index:c+1,intensity:i},l.add(o)}const h=new a.BoxGeometry(3.9,.2,3.2),A=new a.MeshStandardMaterial({color:16777215,roughness:.7,metalness:0,map:I}),w=new a.Mesh(h,A);w.position.x=0,w.position.y=-.2,w.position.z=0,w.scale.setScalar(1.5),w.castShadow=!0,w.receiveShadow=!0,l.add(w),t=new a.Group,t.position.z=-8.53,t.position.x=9,t.position.y=3.5,t.rotation.x=a.MathUtils.degToRad(90),t.name="haptics2",b.add(t);for(let c=0;c<e;c++){const i=(c+1)/e,s=.1,m=.05,y=new a.BoxGeometry(s,m,s);y.translate(0,m/2,0);const n=new a.MeshStandardMaterial({color:new a.Color(i,.1,.1),roughness:.7,metalness:0}),o=new a.Mesh(y,n);o.position.x=(c-5)*(s+.05),o.castShadow=!0,o.receiveShadow=!0,o.userData={index:c+1,intensity:i},t.add(o)}U()}function _(a,b,e,h){l=b.getObjectByName("haptics");let A,w=!1,c=b.getObjectByName("remoteController1");if(c?A={radius:.03,center:c.position}:A={radius:.03,center:0},l&&l.children)for(let i=0;i<l.children.length;i++)l.children[i].collided=!1;if(l&&l.children)for(let i=0;i<l.children.length;i++){const s=l.children[i];if(O.setFromObject(s),O.intersectsSphere(A)){s.material.emissive.b=1;const m=s.userData.index/l.children.length;s.scale.setScalar(1+Math.random()*.1*m);const y=M[s.userData.index%M.length]+12*Math.floor(s.userData.index/M.length);if(v[1].frequency.value=110*Math.pow(2,y/12),w=!0,l.children[i].collided=!0,t&&t.children&&Array.isArray(e))if(i==h[0]&&e[0]==i||u==!0){if(u=!0,t.children[i].material.emissive.b=1,e[1])if(i==h[1]&&e[1]==i||d==!0){if(d=!0,t.children[i].material.emissive.b=1,e[2])if(i==h[2]&&e[2]==i||g==!0){if(g=!0,t.children[i].material.emissive.b=1,e[3])if(i==h[3]&&e[3]==i||p==!0)p=!0,B(),t.children[i].material.emissive.b=1;else{e.length=0;for(let n=0;n<t.children.length;n++)t.children[n].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1}}else{e.length=0;for(let n=0;n<t.children.length;n++)t.children[n].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1}}else{e.length=0;for(let n=0;n<t.children.length;n++)t.children[n].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1}}else{e.length=0;for(let n=0;n<t.children.length;n++)t.children[n].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1}if(Array.isArray(e)&&i!=e[e.length-1]&&JSON.stringify(e)!==JSON.stringify(h)&&(e=e.push(i)),e.length>4&&JSON.stringify(e)!==JSON.stringify(h)){for(let n=0;n<t.children.length;n++)t.children[n].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1,e.length=0}}}if(w==!0?N||(N=!0,v[1].connect(x.destination)):w==!1&&N&&(N=!1,v[1].disconnect(x.destination)),l&&l.children)for(let i=0;i<l.children.length;i++)l.children[i].collided=!1;for(let i=0;i<a.length;i++){const s=a[i];s.colliding=!1;const{grip:m,gamepad:y}=s,n={radius:.03,center:m.position},o="hapticActuators"in y&&y.hapticActuators!=null&&y.hapticActuators.length>0;if(l&&l.children)for(let f=0;f<l.children.length;f++){const S=l.children[f];if(O.setFromObject(S),O.intersectsSphere(n)){S.material.emissive.b=1;const D=S.userData.index/l.children.length;S.scale.setScalar(1+Math.random()*.1*D),o&&y.hapticActuators[0].pulse(D,100);const J=M[S.userData.index%M.length]+12*Math.floor(S.userData.index/M.length);if(v[0].frequency.value=110*Math.pow(2,J/12),s.colliding=!0,l.children[f].collided=!0,t&&t.children&&Array.isArray(e))if(f==h[0]&&e[0]==f||u==!0){if(u=!0,t.children[f].material.emissive.b=1,e[1])if(f==h[1]&&e[1]==f||d==!0){if(d=!0,t.children[f].material.emissive.b=1,e[2])if(f==h[2]&&e[2]==f||g==!0){if(g=!0,t.children[f].material.emissive.b=1,e[3])if(f==h[3]&&e[3]==f||p==!0)p=!0,B(),t.children[f].material.emissive.b=1;else{e.length=0;for(let r=0;r<t.children.length;r++)t.children[r].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1}}else{e.length=0;for(let r=0;r<t.children.length;r++)t.children[r].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1}}else{e.length=0;for(let r=0;r<t.children.length;r++)t.children[r].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1}}else{e.length=0;for(let r=0;r<t.children.length;r++)t.children[r].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1}if(Array.isArray(e)&&f!=e[e.length-1]&&JSON.stringify(e)!==JSON.stringify(h)&&(e=e.push(f)),e.length>4&&JSON.stringify(e)!==JSON.stringify(h)){for(let r=0;r<t.children.length;r++)t.children[r].material.emissive.b=0;u=!1,d=!1,g=!1,p=!1,e.length=0}}}s.colliding?s.playing||(s.playing=!0,v[0].connect(x.destination)):s.playing&&(s.playing=!1,v[0].disconnect(x.destination))}if(l&&l.children)for(let i=0;i<l.children.length;i++){const s=l.children[i];s.collided||(s.material.emissive.b=0,s.scale.setScalar(1))}}function B(){z.update(a=>!0)}export{F as addHaptics,_ as handleCollisions};
