import{T as m,B as D}from"./2.B2YsDWgJ.js";new m().load("./gfs/assets/textures/ComfyUI_00036_.png");let i,g;const d=new D,r=[];let u=null,p;const c=[0,3,5,7,10];function j(O,b,l,f){i=b.getObjectByName("haptics");let y,o=!1,N=b.getObjectByName("remoteController1");if(N?y={radius:.03,center:N.position}:y={radius:.03,center:0},i&&i.children)for(let e=0;e<i.children.length;e++)i.children[e].collided=!1;if(i&&i.children)for(let e=0;e<i.children.length;e++){const t=i.children[e];if(d.setFromObject(t),d.intersectsSphere(y)){t.material.emissive.b=1;const S=t.userData.index/i.children.length;t.scale.setScalar(1+Math.random()*.1*S);const n=c[t.userData.index%c.length]+12*Math.floor(t.userData.index/c.length);if(r[1].frequency.value=110*Math.pow(2,n/12),o=!0,i.children[e].collided=!0,Array.isArray(l)&&e!=l[l.length-1]&&JSON.stringify(l)!==JSON.stringify(f)&&(l=l.push(e)),l.length>4&&JSON.stringify(l)!==JSON.stringify(f)){for(let h=0;h<g.children.length;h++)g.children[h].material.emissive.b=0;l.length=0}}}if(o==!0?p||(p=!0,r[1].connect(u.destination)):o==!1&&p&&(p=!1,r[1].disconnect(u.destination)),i&&i.children)for(let e=0;e<i.children.length;e++)i.children[e].collided=!1;for(let e=0;e<O.length;e++){const t=O[e];t.colliding=!1;const{grip:S,gamepad:n}=t,h={radius:.03,center:S.position},A="hapticActuators"in n&&n.hapticActuators!=null&&n.hapticActuators.length>0;if(i&&i.children)for(let s=0;s<i.children.length;s++){const a=i.children[s];if(d.setFromObject(a),d.intersectsSphere(h)){a.material.emissive.b=1;const v=a.userData.index/i.children.length;a.scale.setScalar(1+Math.random()*.1*v),A&&n.hapticActuators[0].pulse(v,100);const J=c[a.userData.index%c.length]+12*Math.floor(a.userData.index/c.length);if(r[0].frequency.value=110*Math.pow(2,J/12),t.colliding=!0,i.children[s].collided=!0,Array.isArray(l)&&s!=l[l.length-1]&&JSON.stringify(l)!==JSON.stringify(f)&&(l=l.push(s)),l.length>4&&JSON.stringify(l)!==JSON.stringify(f)){for(let x=0;x<g.children.length;x++)g.children[x].material.emissive.b=0;l.length=0}}}t.colliding?t.playing||(t.playing=!0,r[0].connect(u.destination)):t.playing&&(t.playing=!1,r[0].disconnect(u.destination))}if(i&&i.children)for(let e=0;e<i.children.length;e++){const t=i.children[e];t.collided||(t.material.emissive.b=0,t.scale.setScalar(1))}}export{j as handleCollisions};
